{"name":"3ds-sails","tagline":"Nintendo 3ds Screen Canvas Get, Set for Pixel, Region","body":"# 3DS Sails \r\n  \r\n####A \"true-colour\" Canvas for the Nintendo 3DS platform.\r\n####versatile get & set for both pixel or rectangular regions. \r\n####Draw Text, Lines, Boxes, Polygons, Circles & tilted Ellipse \r\n####Seamless Alpha compositing. No calling separate functions for... It's all done automatically\r\n####\"Elegant\" use of left, right, bottom & ... gfxFramebuffer's as your blank canvas.\r\n\r\nAll source Code with exception of \"Dual_for\" macro presented has undergone debugging & passed Eg. is functional/usable.  \r\nThe *.c Sources & snippets presented how ever broken, assume an intermediate++ knowledge \"C\" for there usage!  \r\nTo steno-graph, laymen others a \"glimpse &or new appreciation for the work involved in building an implementation\" and not scarcely fathom just the *.h header/interface's! & if you don't like it; Well then; walk the plank! \r\n  \r\n& too many other Authors && Engineers && Pro-liter-riot's mentioned here or not through out \r\n\"A very sincere Thank-You\"!  \r\n\r\nS.V.P. Any Questions, requests &or proposals can be sent via email!   \r\n\r\nto: kennyd.lee@outlook.com  \r\nor Bcc undead.kennyd@gmail.com, KennyD@mail.com   \r\nSubject: Nintendo 3DS Sails ...  \r\n\r\nEtymology--> https://en.wikipedia.org/wiki/Canvas#Etymology   \r\nThe word \"canvas\" is derived from the 13th century Anglo-French canevaz and the Old French canevas. Both may be derivatives of the Vulgar Latin cannapaceus for \"made of hemp,\" originating from the Greek κάνναβις (cannabis)\r\n\r\n##Our Colour declarations\r\n```\r\n#define RED    0xFFFF0000\r\n#define GREEN  0xFF00FF00\r\n#define BLUE   0xFF0000FF\r\n#define CYAN   0xFF00FFFF\r\n#define PINK   0xFFFF00FF\r\n#define YELLOW 0xFFFFFF00\r\n#define BLACK  0xFF000000\r\n#define WHITE  0xFFFFFFFF\r\n#define ORANGE 0xFFFF9900\r\n#define LIGHT_GREEN 0xFF00CC00\r\n#define PURPLE 0xFF660033\r\n\r\nu32 transparent;\r\n```\r\n\r\n##[Pixel usage/demo](https://www.facebook.com/1596037147331761/photos/a.1629176367351172.1073741828.1596037147331761/1636255289976613/?type=1&theater)\r\n```\r\n\tscreenTopLeft = gfxGetFramebuffer(GFX_TOP, GFX_LEFT, NULL, NULL); \r\n\tscreenTopRight = gfxGetFramebuffer(GFX_TOP, GFX_RIGHT, NULL, NULL); \r\n\r\n//test pattern 1st pass  \r\nfor (i = 0; i < 79; ++i)  \r\n for (j = 0; j < 200; ++j)  \r\n\t{  \r\n        SetCanvasPixel(screenTopLeft,i,j,RED);  \r\n                                SetCanvasPixel(screenTopRight,i,j,RED);  \r\n                                SetCanvasPixel(screenTopLeft,i+80,j,CYAN);  \r\n                                SetCanvasPixel(screenTopRight,i+80,j,CYAN);  \r\n                                SetCanvasPixel(screenTopLeft,i+160,j,YELLOW);  \r\n                                SetCanvasPixel(screenTopRight,i+160,j,YELLOW);  \r\n                                SetCanvasPixel(screenTopLeft,i+240,j,BLACK);  \r\n                                SetCanvasPixel(screenTopRight,i+240,j,BLACK);  \r\n                                SetCanvasPixel(screenTopLeft,i+320,j,BLUE);  \r\n                                SetCanvasPixel(screenTopRight,i+320,j,BLUE);  \r\n\t\t\t\t};  \r\n//test pattern 2nd pass   \r\nfor (i = 0; i < 99; ++i)  \r\n for (j = 201; j < 239; ++j)  \r\n\t{  \r\n                                SetCanvasPixel(screenTopLeft,i,j,PINK);  \r\n                                SetCanvasPixel(screenTopRight,i,j,PINK);  \r\n                                SetCanvasPixel(screenTopLeft,i+100,j,LIGHT_GREEN);  \r\n                                SetCanvasPixel(screenTopRight,i+100,j,LIGHT_GREEN);  \r\n                                SetCanvasPixel(screenTopLeft,i+200,j,WHITE);  \r\n                                SetCanvasPixel(screenTopRight,i+200,j,WHITE);  \r\n                                SetCanvasPixel(screenTopLeft,i+300,j,ORANGE);  \r\n                                SetCanvasPixel(screenTopRight,i+300,j,ORANGE);  \r\n\t\t\t\t}  \r\n\r\n\t\t\t\tgfxFlushBuffers();\r\n\t\t\t\t//gfxSwapBuffers();\r\n\r\n```\r\n##Pixel usage/demo II  \r\n```\r\n   switch(GetCanvasPixel(screenTopLeft,x,y))  \r\n  {   \r\n \tcase RED: text_print(screenBottom, \"Sampled a RED\",100,120); break;  \r\n\tcase GREEN: text_print(screenBottom, \"Sampled a GREEN\",100,120); break;  \r\n \tcase BLUE: text_print(screenBottom, \"Sampled a BLUE\",100,120); break;  \r\n \tcase CYAN: text_print(screenBottom, \"Sampled a CYAN\",100,120); break;  \r\n \tcase PINK: text_print(screenBottom, \"Sampled a PINK\",100,120); break;  \r\n \tcase YELLOW: text_print(screenBottom, \"Sampled a YELLOW\",100,120); break;  \r\n \tcase BLACK: text_print(screenBottom, \"Sampled a BLACK\",100,120); break;  \r\n \tcase WHITE: text_print(screenBottom, \"Sampled a WHITE\",100,120); break;   \r\n \tcase ORANGE: text_print(screenBottom, \"Sampled a ORANGE\",100,120); break;  \r\n \tcase LIGHT_GREEN: text_print(screenBottom, \"Sampled a LIGHT GREEN\",100,120); break;   \r\n \tcase PURPLE: text_print(screenBottom, \"Sampled a PURPLE\",100,120); break;  \r\n\tdefault:   \r\n                ClearCanvas(screenBottom, BLACK);  \r\n\t\tbreak;  \r\n  }  \r\n```  \r\n##[Primitive shapes usage/demo](https://www.facebook.com/1596037147331761/photos/a.1629176367351172.1073741828.1596037147331761/1636836319918510/?type=1&theater)  \r\n```\r\n//Cracker; and the world is full of them; want a polygon?  \r\n\r\n  \t\t\t\tline(screenTopLeft, 0, 239, 399, 0, PINK);  \r\n\t\t\t  \tline(screenTopRight, 0, 0, 399, 239, PINK);  \r\n\t\t\t\tCircle(screenTopLeft, 50, 50, 10, BLUE);     \r\n\t\t\t\tCircle(screenTopRight, 349, 50, 10, RED);      \r\n\t\t\t\tEllipse(screenTopLeft, 50, 150, 20, 10, 45, RED); \r\n\t\t\t\tEllipse(screenTopRight, 349, 150, 20, 10, 135, BLUE); \r\n\r\n\t\t\t\tgfxFlushBuffers();  \r\n```\r\n##[Primitive shapes usage/demo II](https://www.facebook.com/1596037147331761/photos/a.1629176367351172.1073741828.1596037147331761/1638563179745824/?type=3&theater)\r\n```\r\n   int * shape[6];   /* our polygon array */\r\n\r\n    shape[0] = 20;    /* first vertex */\r\n    shape[1] = 20;\r\n    shape[2] = 20;    /* second vertex */\r\n    shape[3] = 60;\r\n    shape[4] = 140;   /* third vertex */\r\n    shape[5] = 80;\r\n  \r\n//   shape[4] = shape[0];      /* our's automatically close */  \r\n//   shape[5] = shape[1];      /* the polygon, so we don't need bother*/  \r\n \r\n   poly(screenTopLeft, shape, 5, LIGHT_GREEN);    \r\n   poly(screenTopRight, shape, 5, LIGHT_GREEN);  \r\n    \r\n   box(screenTopLeft, 70, 90, 260, 40, WHITE);   \r\n   box(screenTopRight, 70, 90, 260, 40, WHITE);   \r\n```\r\n##Rectangular-Region usage/demo\r\n```\r\n//Proforms memory clean-up all cases. What if wii need in 1/2 time repeated usage of ...\r\nSetRecRe(screenBottom,10,10,80,80,GetRecRe(screenTopLeft,10,10,80,80));  \r\nSetRecRe(screenBottom,10,150,80,80,GetRecRe(screenTopRight,10,310,80,80));   \r\n```\r\n##[Extented Rectangular-Region usage/demo I](https://www.facebook.com/1596037147331761/photos/a.1596038283998314.1073741825.1596037147331761/1639316213003854/?type=3&theater)\r\n```\r\n// U ain't Super-Man & I'm not gettin caught  \r\n//#include \"doughbot_bin.h\"   \r\ntransparent = BLACK;  \r\nSetRecEx(screenTopRight,10,10,120,90,doughbot_bin,0,generic);  \r\nSetRecEx(screenTopLeft,10,290,120,90,doughbot_bin,0,generic);  \r\n// U be re-spawning in 3 seconds..  \r\n```\r\n##[Extented Rectangular-Region usage/demo II](https://scontent-yyz1-1.xx.fbcdn.net/hphotos-xat1/v/t1.0-9/12063664_1638968876371921_7804270618532039999_n.png?oh=e27f09923ecd3f10a45402f4efd735aa&oe=56A3B327)\r\n```\r\ntransparent = RED;  \r\nSetRecRe(screenBottom,100,10,80,80,GetRecRe(screenTopLeft,10,10,80,80));  \r\ntransparent = BLUE;  \r\nSetRecRe(screenBottom,100,150,80,80,GetRecRe(screenTopRight,10,310,80,80));  \r\n```  \r\n##Rectangular-Region extended usage/demo III  \r\n```\r\n//SetRecEx & GetRecEx are still in development & yes it's top on my debug list...  \r\n\r\n//  Recbufr= GetRecEx(screenTopRight,10,310,80,80,generic);\r\n//  Recbufr= GetRecEx(screenTopRight,10,310,80,80,vram);\r\n//  Recbufr= GetRecEx(screenTopRight,10,310,80,80,linear);\r\n\r\n//  SetRecEx(screenBottom,100,150,80,80,Recbufr,0,generic);\r\n//  SetRecEx(screenBottom,100,150,80,80,Recbufr,0,vram);\r\n//  SetRecEx(screenBottom,100,150,80,80,Recbufr,0,linear);\r\n\r\n// vramFree(Recbufl);   //still craps-out & freeze machine\r\n// linearFree(Recbufr);  \r\n// free(Recbufr);  \r\n\r\n//  SetRecEx(screenBottom,100,150,80,80,GetRecEx(screenTopRight,10,310,80,80,generic),0,generic); //sain  \r\n//  SetRecEx(screenBottom,100,150,80,80,GetRecEx(screenTopRight,10,310,80,80,vram),1||0,vram); //!sain  \r\n//  SetRecEx(screenBottom,100,150,80,80,GetRecEx(screenTopRight,10,310,80,80,linear),0,linear); //sain  \r\n``` \r\n\r\n[What U can do with 3DS-Sails canvas](http://1drv.ms/1VE3fMM)  \r\n[Why U should use the \"3DS-Sails\"](https://gbatemp.net/threads/tutorial-make-a-3d-art-and-put-it-on-3ds.381116/)  \r\n  \r\n& Tell'em Kenny D, bent-ya! go go Mozilla.. \r\n","google":"UA-68581753-1","note":"Don't delete this file! It's used internally to help with page regeneration."}